import telebot
from telebot import types
import random
from config import BOT_TOKEN, MESSAGES
from database import Database

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
bot = telebot.TeleBot(BOT_TOKEN)
db = Database()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_command(message):
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
    db.add_user(user_id, username, first_name)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(
        message.chat.id,
        MESSAGES['start'],
        reply_markup=create_main_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(
        message.chat.id,
        MESSAGES['help'],
        reply_markup=create_main_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /new_habit
# –û–ø—Ä–æ—Å–Ω–∏–∫ –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–æ–∫, —Å–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥
@bot.message_handler(commands=['new_habit'])
def new_habit_command(message):
    msg = bot.send_message(
        message.chat.id,
        "üéØ –ö–∞–∫—É—é –≤—Ä–µ–¥–Ω—É—é –ø—Ä–∏–≤—ã—á–∫—É —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–±–µ–¥–∏—Ç—å?\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: '–∫—É—Ä–µ–Ω–∏–µ', '–≥—Ä—ã–∑—Ç—å –Ω–æ–≥—Ç–∏', '–ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—è'"
    )
    bot.register_next_step_handler(msg, process_habit_name)


def process_habit_name(message):
    habit_name = message.text.strip()
    user_id = message.from_user.id

    if habit_name:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø—Ä–∏–≤—ã—á–∫—É
        if db.create_habit(user_id, habit_name):
            bot.send_message(
                message.chat.id,
                MESSAGES['habit_created'].format(habit_name),
                reply_markup=create_main_keyboard()
            )
        else:
            bot.send_message(
                message.chat.id,
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–≤—ã—á–∫–∏. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑."
            )
    else:
        bot.send_message(
            message.chat.id,
            "‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ —Å –ø–æ–º–æ—â—å—é /new_habit"
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /success
@bot.message_handler(commands=['success'])
def success_command(message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏–≤—ã—á–∫–∞
    habit = db.get_user_habit(user_id)
    if not habit:
        bot.send_message(message.chat.id, MESSAGES['no_habit'])
        return

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –¥–µ–Ω—å
    new_streak = db.record_success(user_id)

    if new_streak:
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ñ—Ä–∞–∑—É
        motivation = random.choice(MESSAGES['motivation'])

        bot.send_message(
            message.chat.id,
            f"{MESSAGES['success'].format(new_streak)}\n\n{motivation}"
        )
    else:
        bot.send_message(
            message.chat.id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞."
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /break
@bot.message_handler(commands=['break'])
def break_command(message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏–≤—ã—á–∫–∞
    habit = db.get_user_habit(user_id)
    if not habit:
        bot.send_message(message.chat.id, MESSAGES['no_habit'])
        return

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ä—ã–≤
    if db.record_break(user_id):
        bot.send_message(
            message.chat.id,
            MESSAGES['break']
        )
    else:
        bot.send_message(
            message.chat.id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞."
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats
@bot.message_handler(commands=['stats'])
def stats_command(message):
    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = db.get_user_stats(user_id)
    if not stats:
        bot.send_message(message.chat.id, MESSAGES['no_habit'])
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    stats_message = f"""
üìä –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–∏–≤—ã—á–∫–µ: *{stats['habit_name']}*

‚úÖ –¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è: *{stats['current_streak']} –¥–Ω–µ–π*
üèÜ –°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è —Å–µ—Ä–∏—è: *{stats['longest_streak']} –¥–Ω–µ–π*
üìÖ –í—Å–µ–≥–æ —É—Å–ø–µ—à–Ω—ã—Ö –¥–Ω–µ–π: *{stats['total_days']}*
üòî –î–Ω–µ–π —Å–æ —Å—Ä—ã–≤–æ–º: *{stats['break_days']}*
üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: *{stats['success_rate']}%*

–ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üí´
    """

    bot.send_message(
        message.chat.id,
        stats_message,
        parse_mode='Markdown'
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    if message.text.lower() in ['–ø—Ä–∏–≤–µ—Ç', 'hello', 'start']:
        start_command(message)
    else:
        bot.send_message(
            message.chat.id,
            "ü§î –Ø –Ω–µ –ø–æ–Ω—è–ª —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã –∏–∑ –º–µ–Ω—é –∏–ª–∏ /help"
        )


def create_main_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton('/success ‚úÖ'))
    keyboard.add(types.KeyboardButton('/break üòî'))
    keyboard.add(types.KeyboardButton('/stats üìä'))
    keyboard.add(types.KeyboardButton('/help ‚ùì'))
    return keyboard


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("–ë–æ—Ç HabitBreaker AI –∑–∞–ø—É—â–µ–Ω...")
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    finally:
        db.close()

